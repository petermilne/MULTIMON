#!/usr/bin/expect

log_user 0
spawn casw -i 10

global UUTS

proc make_update {now} {
	global UUTS
	set fp [open acq400.xml.new w]
	puts $fp {<?xml version="1.0" encoding="UTF-8"?>}
	set DATE [exec date]
	puts $fp "<body><header>$DATE</header>"
	foreach uut [lsort -index 0 [array names UUTS]] {
		set age [expr $now - [clock scan $UUTS($uut)]]
		if {$age > 120} {
			unset UUTS($uut)	
		} else {
			set uptime err
			set T0 err
			set state err
			set shot err
			catch {
				set uptime [exec caget -t $uut:SYS:UPTIME]
				set T0 [exec caget -t $uut:SYS:0:TEMP]
				set shot [exec caget -t $uut:1:SHOT]
				set state [exec caget -t $uut:MODE:TRANS_ACT:STATE]
			}
			puts $fp {<record>}
			puts $fp "<acq400monitor dt=\"$age\"/>"
			puts $fp {<info>}
			puts $fp "<host>$uut</host>"
			puts $fp "<uptime>$uptime</uptime>"
			puts $fp "<T0>$T0</T0>"
			puts $fp "<state>$state</state>"
			puts $fp "<shot>$shot</shot>"
			puts $fp {</info></record>}
		}
	}
	puts $fp {</body>}
	file rename -force acq400.xml.new acq400.xml
	close $fp
}
set update0 [clock seconds]
while { 1 } {
	expect {
	-re "(\[a-zA-Z0-9\._\-]+)\.d\-tacq:5064.*(\[0-9-]+) (\[0-9:]+)(\.\[0-9]+)\r\n" {
			set uut $expect_out(1,string)
			set tim $expect_out(3,string)
#			puts "got one $uut at $tim"
			set UUTS($uut) $tim
		}
	}
	set now [clock seconds]
#	puts "update0 $update0 now $now"
	if { $now > [expr $update0 + 1] } {
		make_update $now
		set update0 $now
	}
}

